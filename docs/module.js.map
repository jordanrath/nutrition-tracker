{"mappings":"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","sources":["src/index.js","src/fetch-wrapper.js","src/helpers.js","src/app-data.js"],"sourcesContent":["import FetchWrapper from \"./fetch-wrapper.js\";\nimport { capitalize, calculateCalories } from \"./helpers.js\";\nimport snackbar from \"snackbar\";\nimport AppData from \"./app-data.js\";\nimport \"snackbar/dist/snackbar.min.css\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n\nimport Chart from \"chart.js/auto\";\n\nconst API = new FetchWrapper(\n  \"https://nutrition-logger-4a682-default-rtdb.firebaseio.com/\"\n);\n\nconst appData = new AppData();\n\nconst firebaseConfig = {\n\n  apiKey: \"AIzaSyDaNdqJ6U40eJO_nosHlw7Lj0_MzbXGvAg\",\n  authDomain: \"nutrition-logger-4a682.firebaseapp.com\",\n  projectId: \"nutrition-logger-4a682\",\n  storageBucket: \"nutrition-logger-4a682.appspot.com\",\n  messagingSenderId: \"434895144907\",\n  appId: \"1:434895144907:web:481cff3fc742342ebb584e\",\n  measurementId: \"G-F2ZJESK4VN\"\n\n};\n\n\n// ************* Add route to username login and add username to display on main page ***********\n\n// Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Cloud Firestore\nconst db = getFirestore(app);\n\n// Initialize Analytics\nconst analytics = getAnalytics(app);\n\n\nconst list = document.querySelector(\"#food-list\");\nconst form = document.querySelector(\"#create-form\");\nconst name = document.querySelector(\"#create-name\");\nconst carbs = document.querySelector(\"#create-carbs\");\nconst protein = document.querySelector(\"#create-protein\");\nconst fat = document.querySelector(\"#create-fat\");\n\nconst displayEntry = (name, carbs, protein, fat) => {\n  appData.addFood(carbs, protein, fat);\n  list.insertAdjacentHTML(\n    \"beforeend\",\n    `<li class=\"card\">\n        <div>\n          <h3 class=\"name\">${capitalize(name)}</h3>\n          <div class=\"calories\">${calculateCalories(\n            carbs,\n            protein,\n            fat\n          )} calories</div>\n          <ul class=\"macros\">\n            <li class=\"carbs\"><div>Carbs</div><div class=\"value\">${carbs}g</div></li>\n            <li class=\"protein\"><div>Protein</div><div class=\"value\">${protein}g</div></li>\n            <li class=\"fat\"><div>Fat</div><div class=\"value\">${fat}g</div></li>\n          </ul>\n        </div>\n      </li>`\n  );\n};\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  API.post(\"/history.json\", {\n    fields: {\n      name: { stringValue: name.value },\n      carbs: { integerValue: carbs.value },\n      protein: { integerValue: protein.value },\n      fat: { integerValue: fat.value },\n    },\n  }).then((data) => {\n    console.log(data);\n    if (data.error) {\n      // there was an error\n      snackbar.show(\"Some data is missing.\");\n      return;\n    }\n\n    snackbar.show(\"Food added successfully.\");\n\n    displayEntry(name.value, carbs.value, protein.value, fat.value);\n    render();\n\n    name.value = \"\";\n    carbs.value = \"\";\n    protein.value = \"\";\n    fat.value = \"\";\n  });\n});\n\nconst init = () => {\n  API.get(\"/history.json?pageSize=100\").then((data) => {\n    data?.documents?.forEach((doc) => {\n      const fields = doc.fields;\n\n      displayEntry(\n        fields.name.stringValue,\n        fields.carbs.integerValue,\n        fields.protein.integerValue,\n        fields.fat.integerValue\n      );\n    });\n    render();\n  });\n};\n\nlet chartInstance = null;\nconst renderChart = () => {\n  chartInstance?.destroy();\n  const context = document.querySelector(\"#app-chart\").getContext(\"2d\");\n\n  chartInstance = new Chart(context, {\n    type: \"bar\",\n    data: {\n      labels: [\"Carbs\", \"Protein\", \"Fat\"],\n      datasets: [\n        {\n          label: \"Macronutrients\",\n          data: [\n            appData.getTotalCarbs(),\n            appData.getTotalProtein(),\n            appData.getTotalFat(),\n          ],\n          backgroundColor: [\"#25AEEE\", \"#FECD52\", \"#57D269\"],\n          borderWidth: 3, // example of other customization\n        },\n      ],\n    },\n    options: {\n      scales: {\n        y: {\n            ticks: {\n              beginAtZero: true,\n            },\n          },\n      },\n    },\n  });\n};\n\nconst totalCalories = document.querySelector(\"#total-calories\");\n\nconst updateTotalCalories = () => {\n  totalCalories.textContent = appData.getTotalCalories();\n};\n\nconst render = () => {\n  renderChart();\n  updateTotalCalories();\n};\n\ninit();\n","export default class FetchWrapper {\n  constructor(baseURL) {\n    this.baseURL = baseURL;\n    console.log(baseURL)\n  }\n\n  get(endpoint) {\n    return fetch(this.baseURL + endpoint).then((response) => response.json());\n  }\n\n  put(endpoint, body) {\n    return this._send(\"put\", endpoint, body);\n  }\n\n  post(endpoint, body) {\n    return this._send(\"post\", endpoint, body);\n  }\n\n  patch(endpoint, body) {\n    return this._send(\"patch\", endpoint, body);\n  }\n\n  delete(endpoint, body) {\n    return this._send(\"delete\", endpoint, body);\n  }\n\n  _send(method, endpoint, body) {\n    return fetch(this.baseURL + endpoint, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    }).then((response) => response.json());\n  }\n}\n","export const capitalize = (word) => {\n  return word[0].toUpperCase() + word.substring(1).toLowerCase();\n};\n\nexport const calculateCalories = (carbs = 0, protein = 0, fat = 0) => {\n  return carbs * 4 + protein * 4 + fat * 9;\n};\n","export default class AppData {\n  constructor() {\n    this.food = [];\n  }\n\n  addFood(carbs, protein, fat) {\n    this.food.push({\n      carbs: Number.parseInt(carbs, 10),\n      protein: Number.parseInt(protein, 10),\n      fat: Number.parseInt(fat, 10),\n    });\n  }\n\n  getTotalCarbs() {\n    return this.food.reduce((total, current) => {\n      return total + current.carbs;\n    }, 0);\n  }\n\n  getTotalProtein() {\n    return this.food.reduce((total, current) => {\n      return total + current.protein;\n    }, 0);\n  }\n\n  getTotalFat() {\n    return this.food.reduce((total, current) => {\n      return total + current.fat;\n    }, 0);\n  }\n\n  getTotalCalories() {\n    return (\n      this.getTotalCarbs() * 4 +\n      this.getTotalProtein() * 4 +\n      this.getTotalFat() * 9\n    );\n  }\n}\n"],"names":[],"version":3,"file":"module.js.map"}